<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.java.spider.dao.DouBanPageMapper">

    <resultMap id="BaseResultMap" type="com.java.spider.entity.Page">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="videoId" jdbcType="VARCHAR" property="videoId" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="no" jdbcType="INTEGER" property="no" />
        <result column="score" jdbcType="DOUBLE" property="score" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="number" jdbcType="INTEGER" property="number" />
        <result column="director" jdbcType="VARCHAR" property="director" />
        <result column="scriptwriter" jdbcType="VARCHAR" property="scriptwriter" />
        <result column="protagonists" jdbcType="VARCHAR" property="protagonists" />
        <result column="quote" jdbcType="VARCHAR" property="quote" />
        <result column="country" jdbcType="VARCHAR" property="country" />
        <result column="language" jdbcType="VARCHAR" property="language" />
        <result column="releaseDate" jdbcType="VARCHAR" property="releaseDate" />
        <result column="mins" jdbcType="INTEGER" property="mins" />
        <result column="alternateName" jdbcType="VARCHAR" property="alternateName" />
        <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    </resultMap>

    <sql id="whereSqlDebris">
        <if test="map.id!= null "> and id = #{map.id} </if>
        <if test="map.url!= null "> and url = #{map.url} </if>
        <if test="map.videoId!= null "> and videoId = #{map.videoId} </if>
        <if test="map.name!= null "> and name = #{map.name} </if>
        <if test="map.no!= null "> and no = #{map.no} </if>
        <if test="map.score!= null "> and score = #{map.score} </if>
        <if test="map.type!= null "> and type = #{map.type} </if>
        <if test="map.director!= null "> and director = #{map.director} </if>
        <if test="map.country!= null "> and country = #{map.country} </if>
        <if test="map.language!= null "> and language = #{map.language} </if>
    </sql>

    <select id="getById" parameterType="java.lang.Integer" resultType="com.java.spider.entity.Page">
		select * from spider_doubanmovietop250 where id = #{id}
	</select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from spider_doubanmovietop250
        where id = #{id}
    </delete>

    <insert id="insert" parameterType="com.java.spider.entity.Page">
        insert into spider_doubanmovietop250 (url, videoId,
            `name`, `no`, score, `type`,
            `number`, director, scriptwriter,
            protagonists, `quote`, country,
            `language`, releaseDate, mins,
            alternateName, introduction)
        values ( #{url}, #{videoId},
            #{name}, #{no}, #{score}, #{type},
            #{number}, #{director}, #{scriptwriter},
            #{protagonists}, #{quote}, #{country},
            #{language}, #{releaseDate}, #{mins},
            #{alternateName}, #{introduction})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.java.spider.entity.Page">
        update spider_doubanmovietop250
        set
        <if test="url!= null ">url = #{url }, </if>
        <if test="videoId!= null ">videoId = #{videoId }, </if>
        <if test="name!= null ">name = #{name }, </if>
            `no` = #{no},
             score = #{score},
            `type` = #{type},
             `number` = #{number},
             director = #{director},
             scriptwriter = #{scriptwriter},
             protagonists = #{protagonists},
             `quote` = #{quote},
             country = #{country},
             `language` = #{language},
             releaseDate = #{releaseDate},
             mins = #{mins},
             alternateName = #{alternateName},
             introduction = #{introduction}
        where id = #{id}
    </update>

    <select id="selectByPrimaryKey" parameterType="Map" resultType="com.java.spider.entity.Page">
        select id, url, videoId, `name`, `no`, score, `type`, `number`, director, scriptwriter,
            protagonists, `quote`, country, `language`, releaseDate, mins, alternateName, introduction
            from spider_doubanmovietop250
        <where>
            <include refid="whereSqlDebris" />
        </where>
    </select>

    <select id="selectByVedioId" parameterType="java.lang.String" resultType="com.java.spider.entity.Page">
        select *
        from spider_doubanmovietop250
        where videoId = #{videoId}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select id, url, videoId, `name`, `no`, score, `type`, `number`, director, scriptwriter,
               protagonists, `quote`, country, `language`, releaseDate, mins, alternateName, introduction
        from spider_doubanmovietop250
    </select>
</mapper>